From 63e9cc0365aa511adf935fb4e06b343f05db876e Mon Sep 17 00:00:00 2001
From: Sushil Yadav <sushil.ky@samsung.com>
Date: Wed, 14 Sep 2016 21:01:35 +0530
Subject: tinyara iotivity 1.2.0-RC2

Signed-off-by: Sushil Yadav <sushil.ky@samsung.com>
---
 SConstruct                                         | 17 ++++++---
 build_common/SConscript                            | 15 ++++++--
 extlibs/tinydtls/ecc/ecc.c                         | 18 ++++++++++
 resource/SConscript                                | 11 ++++--
 resource/c_common/SConscript                       |  3 ++
 resource/c_common/ocrandom/include/ocrandom.h      |  4 +--
 resource/c_common/ocrandom/src/ocrandom.c          | 25 +++++++++----
 resource/csdk/connectivity/common/SConscript       |  3 ++
 .../csdk/connectivity/lib/libcoap-4.1.1/SConscript |  5 ++-
 .../csdk/connectivity/lib/libcoap-4.1.1/address.h  |  3 ++
 .../csdk/connectivity/lib/libcoap-4.1.1/encode.h   |  2 +-
 .../csdk/connectivity/lib/libcoap-4.1.1/resource.c |  3 +-
 .../connectivity/src/adapter_util/caadapterutils.c |  4 +++
 resource/csdk/connectivity/src/caqueueingthread.c  |  8 +++--
 resource/csdk/connectivity/src/caretransmission.c  | 21 ++++++++---
 .../csdk/connectivity/src/ip_adapter/caipserver.c  | 41 ++++++++++++++++++++++
 .../src/ip_adapter/linux/caipnwmonitor.c           |  6 ++++
 resource/csdk/security/src/credresource.c          | 33 ++++++++++++++++-
 tinyara.scons                                      |  2 ++
 19 files changed, 194 insertions(+), 30 deletions(-)
 create mode 100644 tinyara.scons

diff --git a/SConstruct b/SConstruct
index ac76f39..bf749ee 100644
--- a/SConstruct
+++ b/SConstruct
@@ -42,6 +42,9 @@ if target_os == 'arduino':
 if target_os == 'android':
 	SConscript('android/android_api/SConscript')
 
+if target_os == 'tinyara':
+	SConscript('tinyara.scons')
+
 # By default, src_dir is current dir, the build_dir is:
 #     ./out/<target_os>/<target_arch>/<release or debug>/
 #
@@ -54,19 +57,23 @@ if target_os == 'android':
 build_dir = env.get('BUILD_DIR')
 
 # Build 'resource' sub-project
-SConscript(build_dir + 'resource/SConscript')
+if target_os in ['arduino','darwin','ios', 'android', 'msys_nt', 'windows', 'tinyara']:
+	SConscript(build_dir + 'resource/SConscript')
 
-if target_os not in ['arduino','darwin','ios', 'android', 'msys_nt', 'windows']:
+if target_os not in ['arduino','darwin','ios', 'android', 'msys_nt', 'windows', 'tinyara']:
 	SConscript(build_dir + 'examples/OICMiddle/SConscript')
 
 # Build 'service' sub-project
-SConscript(build_dir + 'service/SConscript')
+if target_os in ['arduino','darwin','ios', 'android', 'msys_nt', 'windows']:
+	SConscript(build_dir + 'service/SConscript')
 
 # Build "cloud" sub-project
-SConscript(build_dir + 'cloud/SConscript')
+if target_os in ['arduino','darwin','ios', 'android', 'msys_nt', 'windows']:
+	SConscript(build_dir + 'cloud/SConscript')
 
 # Build "plugin interface" sub-project
-SConscript(build_dir + 'plugins/SConscript')
+if target_os in ['arduino','darwin','ios', 'android', 'msys_nt', 'windows']:
+	SConscript(build_dir + 'plugins/SConscript')
 
 # Append targets information to the help information, to see help info, execute command line:
 #     $ scon [options] -h
diff --git a/build_common/SConscript b/build_common/SConscript
index b700453..2ad35a5 100644
--- a/build_common/SConscript
+++ b/build_common/SConscript
@@ -10,8 +10,8 @@ project_version = '1.2.0'
 
 # Map of host os and allowed target os (host: allowed target os)
 host_target_map = {
-		'linux': ['linux', 'android', 'arduino', 'yocto', 'tizen'],
-		'windows': ['windows', 'android', 'arduino'],
+		'linux': ['linux', 'android', 'arduino', 'yocto', 'tizen', 'tinyara'],
+		'windows': ['windows', 'winrt', 'android', 'arduino'],
 		'darwin': ['darwin', 'ios', 'android', 'arduino'],
 		'msys_nt' :['msys_nt'],
 		}
@@ -27,6 +27,7 @@ os_arch_map = {
 		'ios': ['i386', 'x86_64', 'armv7', 'armv7s', 'arm64'],
 		'arduino': ['avr', 'arm'],
 		'yocto': ['i586', 'x86_64', 'arm', 'powerpc', 'powerpc64', 'mips', 'mipsel'],
+		'tinyara': ['armv7-r', 'armv7-m'],
 		}
 
 host = platform.system().lower()
@@ -127,7 +128,7 @@ AddOption('--prefix',
 ######################################################################
 # Platform(build target) specific options: SDK/NDK & toolchain
 ######################################################################
-targets_support_cc = ['linux', 'arduino', 'tizen']
+targets_support_cc = ['linux', 'arduino', 'tizen', 'tinyara']
 
 if target_os in targets_support_cc:
 	# Set cross compile toolchain
@@ -183,6 +184,14 @@ if target_os in targets_support_cc:
 
 	if prefix or tc_path:
 		print tc_set_msg
+	
+	if target_os == 'tinyara':
+		#TODO: Check the correct path to be used here!
+		sys_root = env.GetLaunchDir()
+		env.AppendUnique(CPPPATH= [sys_root + '/../../../os/include/', sys_root + '/../../../os/include/tinyara/', '/usr/lib/arm-none-eabi/include/'])
+		env.AppendUnique(LIBPATH= [sys_root + '/../../../os/include/lib/', '/usr/lib/arm-none-eabi/include/'])
+		env.AppendUnique(CPPDEFINES = ['__TINYARA__'])
+		#env.AppendUnique(CPPDEFINES = ['CONFIG_CLOCK_MONOTONIC'])
 
 # If cross-compiling, honor environment settings for toolchain to avoid picking up native tools
 if os.environ.get('PKG_CONFIG') != None:
diff --git a/extlibs/tinydtls/ecc/ecc.c b/extlibs/tinydtls/ecc/ecc.c
index 3de525f..b46037c 100644
--- a/extlibs/tinydtls/ecc/ecc.c
+++ b/extlibs/tinydtls/ecc/ecc.c
@@ -392,6 +392,24 @@ static int default_RNG(uint8_t *p_dest, unsigned p_size)
     return 1;
 }
 
+#elif defined(__TINYARA__)
+static int random_count=0;
+int rand_num[10]={55,44,66,33,98,22,8,1,22,99};
+static int default_RNG(uint8_t *p_dest, unsigned p_size)
+{
+/*TODO- For embedded platform, a proper implementation of default_RNG is required.
+    Workaound : returning hardcoded values for now until tinyara supports  default_RNG*/
+    
+	int z,val=1234+rand_num[random_count%10];
+	for(z=0;z<32;z++)
+	{
+		p_dest[z]=val+(z*rand_num[random_count%10]);
+		val+=67;
+	}	
+	random_count++;
+	return 1;
+//    return 0;
+}
 #else /* Some other platform */
 
 static int default_RNG(uint8_t *p_dest, unsigned p_size)
diff --git a/resource/SConscript b/resource/SConscript
index e3f217e..1545d1a 100644
--- a/resource/SConscript
+++ b/resource/SConscript
@@ -48,19 +48,20 @@ if env.get('ROUTING') in ['GW', 'EP']:
 	SConscript('csdk/routing/SConscript')
 
 # Build libocsrm
-SConscript('csdk/security/SConscript')
+if target_os not in ['tinyara']:
+	SConscript('csdk/security/SConscript')
 
 # Build liboctbstack
 SConscript('csdk/SConscript')
 
-if target_os not in ['arduino','darwin','ios']:
+if target_os not in ['arduino','darwin','ios', 'tinyara']:
 	# Build liboc_logger
 	SConscript('oc_logger/SConscript')
 
 	# Build liboc
 	SConscript('src/SConscript')
 
-if target_os not in ['arduino','darwin','ios','android']:
+if target_os not in ['arduino','darwin','ios','android', 'tinyara']:
 	# Build examples
 	SConscript('examples/SConscript')
 
@@ -93,3 +94,7 @@ elif target_os == 'msys_nt':
 
 	# Build C/C++ unit tests
 	SConscript('unit_tests.scons')
+
+elif target_os == 'tinyara':
+	# Build C Samples
+	SConscript('csdk/stack/samples/linux/SimpleClientServer/SConscript')
diff --git a/resource/c_common/SConscript b/resource/c_common/SConscript
index feeb724..907651a 100644
--- a/resource/c_common/SConscript
+++ b/resource/c_common/SConscript
@@ -149,6 +149,9 @@ else:
 if target_os in ['tizen', 'linux']:
 	env.ParseConfig("pkg-config --cflags --libs uuid")
 
+if target_os in ['tinyara']:
+	env.AppendUnique(CCFLAGS = ['-std=c99'])
+
 common_env = env.Clone()
 
 ######################################################################
diff --git a/resource/c_common/ocrandom/include/ocrandom.h b/resource/c_common/ocrandom/include/ocrandom.h
index 7a91dea..2827604 100644
--- a/resource/c_common/ocrandom/include/ocrandom.h
+++ b/resource/c_common/ocrandom/include/ocrandom.h
@@ -29,9 +29,9 @@
 extern "C" {
 #endif
 
-#ifndef ARDUINO
+#if defined(__ANDROID__) || defined(__linux__) || defined(__TINYARA__)
 #include <time.h>
-#else
+#elif defined ARDUINO
 // MEGA has 16 input pins whereas Due has only 12 input pins
 #define ANALOG_IN (10)
 #endif
diff --git a/resource/c_common/ocrandom/src/ocrandom.c b/resource/c_common/ocrandom/src/ocrandom.c
index 32c4b4b..32f1e7e 100644
--- a/resource/c_common/ocrandom/src/ocrandom.c
+++ b/resource/c_common/ocrandom/src/ocrandom.c
@@ -31,7 +31,13 @@
 #endif
 
 #include "iotivity_config.h"
-
+#if defined(__TINYARA__)
+#include "fcntl.h"
+#include "unistd.h"
+#include <stdlib.h>
+#include <sys/time.h>
+#include <time.h>
+#else
 #ifdef HAVE_FCNTL_H
 #include <fcntl.h>
 #endif
@@ -47,6 +53,7 @@
 #ifdef HAVE_TIME_H
 #include <time.h>
 #endif
+#endif
 #if defined(__ANDROID__)
 #include <ctype.h>
 #include <linux/time.h>
@@ -57,7 +64,7 @@
 #include "ocrandom.h"
 #include <stdio.h>
 
-#ifdef HAVE_UUID_UUID_H
+#if !defined(__ANDROID__) && (defined(__linux__) || defined(__APPLE__) || defined(__TINYARA__))
 #include <uuid/uuid.h>
 #endif
 
@@ -115,7 +122,9 @@ uint8_t GetRandomBit()
 
 int8_t OCSeedRandom()
 {
-#ifndef ARDUINO
+// SKY: TODO Review it again
+#if defined(__ANDROID__) || defined(__linux__) || defined(__APPLE__) || defined(__TIZEN__) || defined(__TINYARA__)
+//#ifndef ARDUINO
     // Get current time to Seed.
     uint64_t currentTime = 0;
 #ifdef __ANDROID__
@@ -136,7 +145,7 @@ int8_t OCSeedRandom()
     gettimeofday(&tv, NULL);
     currentTime = tv.tv_sec * (uint64_t)1000000 + tv.tv_usec;
 #endif
-#if defined(__unix__) || defined(__APPLE__)
+#if defined(__unix__) || defined(__APPLE__) || defined(__TINYARA__)
     int32_t fd = open("/dev/urandom", O_RDONLY);
     if (fd >= 0)
     {
@@ -201,11 +210,15 @@ uint32_t OCGetRandom()
 
 uint8_t OCGetRandomByte(void)
 {
+#if defined(__ANDROID__) || defined(__linux__) || defined(__APPLE__) || defined(__TINYARA__)
+    return rand() & 0x00FF;
+#elif defined ARDUINO
 #ifdef HAVE_SRANDOM
     return random() & 0x00FF;
 #else
     return rand() & 0x00FF;
 #endif
+#endif
 }
 
 uint32_t OCGetRandomRange(uint32_t firstBound, uint32_t secondBound)
@@ -286,7 +299,7 @@ OCRandomUuidResult OCGenerateUuid(uint8_t uuid[UUID_SIZE])
     uuid[15] = parseUuidPart(&uuidString[34]);
 
     return RAND_UUID_OK;
-#elif defined(HAVE_UUID_UUID_H)
+#elif !defined(__ANDROID__) && (defined(__linux__) || defined(__APPLE__) || defined(__TINYARA__))
     // note: uuid_t is typedefed as unsigned char[16] on linux/apple
     uuid_generate(uuid);
     return RAND_UUID_OK;
@@ -331,7 +344,7 @@ OCRandomUuidResult OCGenerateUuidString(char uuidString[UUID_STRING_SIZE])
         close(fd);
         return RAND_UUID_READ_ERROR;
     }
-#elif defined(HAVE_UUID_UUID_H)
+#elif !defined(__ANDROID__) && (defined(__linux__) || defined(__APPLE__) || defined(__TINYARA__))
     uint8_t uuid[UUID_SIZE];
     int8_t ret = OCGenerateUuid(uuid);
 
diff --git a/resource/csdk/connectivity/common/SConscript b/resource/csdk/connectivity/common/SConscript
index 4db7d47..53fae3a 100644
--- a/resource/csdk/connectivity/common/SConscript
+++ b/resource/csdk/connectivity/common/SConscript
@@ -42,3 +42,6 @@ else:
 
 env.AppendUnique(CA_SRC = ca_common_src)
 env.AppendUnique(CA_SRC = platform_src)
+env.AppendUnique(CCFLAGS = ['-std=c99'])
+#env.AppendUnique(CFLAGS = ['-std=c99','-std=gnu99'])
+#env.AppendUnique(CXXFLAGS = ['-std=c99','-std=gnu99'])
diff --git a/resource/csdk/connectivity/lib/libcoap-4.1.1/SConscript b/resource/csdk/connectivity/lib/libcoap-4.1.1/SConscript
index b47c835..70e5fd9 100644
--- a/resource/csdk/connectivity/lib/libcoap-4.1.1/SConscript
+++ b/resource/csdk/connectivity/lib/libcoap-4.1.1/SConscript
@@ -41,7 +41,7 @@ if target_os == 'msys_nt':
 	libcoap_env.AppendUnique(CPPDEFINES = ['_DEFAULT_SOURCE'])
 	libcoap_env.AppendUnique(CFLAGS = ['-std=c99'])
 
-if target_os in ['linux', 'tizen', 'android', 'ios', 'arduino']:
+if target_os in ['linux', 'tizen', 'android', 'ios', 'arduino', 'tinyara']:
 	if with_tcp == True:
 		libcoap_env.AppendUnique(CPPDEFINES = ['WITH_TCP'])
 
@@ -56,6 +56,9 @@ if target_os == 'arduino':
 if target_os in ['darwin', 'ios']:
 	libcoap_env.AppendUnique(CPPDEFINES = ['_DARWIN_C_SOURCE'])
 
+if target_os in ['tinyara']:
+	libcoap_env.AppendUnique(CPPDEFINES = ['__STRICT_ANSI__'])
+
 if env.get('LOGGING'):
 	libcoap_env.AppendUnique(CPPDEFINES = ['TB_LOG'])
 
diff --git a/resource/csdk/connectivity/lib/libcoap-4.1.1/address.h b/resource/csdk/connectivity/lib/libcoap-4.1.1/address.h
index c26784c..78f20a5 100644
--- a/resource/csdk/connectivity/lib/libcoap-4.1.1/address.h
+++ b/resource/csdk/connectivity/lib/libcoap-4.1.1/address.h
@@ -135,8 +135,11 @@ _coap_is_mcast_impl(const coap_address_t *a)
     {
         case AF_INET:
         return IN_MULTICAST(a->addr.sin.sin_addr.s_addr);
+/* TODO - Enable this once IPv6 comes in TinyAra */
+#if 0
         case AF_INET6:
         return IN6_IS_ADDR_MULTICAST(&a->addr.sin6.sin6_addr);
+#endif
         default: /* fall through and signal error */
         ;
     }
diff --git a/resource/csdk/connectivity/lib/libcoap-4.1.1/encode.h b/resource/csdk/connectivity/lib/libcoap-4.1.1/encode.h
index a7a8888..67a8856 100644
--- a/resource/csdk/connectivity/lib/libcoap-4.1.1/encode.h
+++ b/resource/csdk/connectivity/lib/libcoap-4.1.1/encode.h
@@ -9,7 +9,7 @@
 #ifndef _COAP_ENCODE_H_
 #define _COAP_ENCODE_H_
 
-#if (BSD >= 199103) || defined(WITH_CONTIKI)
+#if (BSD >= 199103) || defined(WITH_CONTIKI) || defined(__TINYARA__)
 # include <string.h>
 #else
 #if !defined(WITH_ARDUINO) && !defined(_MSC_VER)
diff --git a/resource/csdk/connectivity/lib/libcoap-4.1.1/resource.c b/resource/csdk/connectivity/lib/libcoap-4.1.1/resource.c
index 3af2f0c..2671e93 100644
--- a/resource/csdk/connectivity/lib/libcoap-4.1.1/resource.c
+++ b/resource/csdk/connectivity/lib/libcoap-4.1.1/resource.c
@@ -105,7 +105,8 @@ coap_free_subscription(coap_subscription_t *subscription)
     }                                   \
   }
 
-int match(const str *text, const str *pattern, int match_prefix, int match_substring)
+/* Make this function static due to linking error in Artik050 build */
+static int match(const str *text, const str *pattern, int match_prefix, int match_substring)
 {
     assert(text);
     assert(pattern);
diff --git a/resource/csdk/connectivity/src/adapter_util/caadapterutils.c b/resource/csdk/connectivity/src/adapter_util/caadapterutils.c
index 8355886..24b9bbb 100644
--- a/resource/csdk/connectivity/src/adapter_util/caadapterutils.c
+++ b/resource/csdk/connectivity/src/adapter_util/caadapterutils.c
@@ -44,6 +44,10 @@
 #include <netdb.h>
 #endif
 
+#ifdef __TINYARA__
+#include <netdb.h>
+#endif
+
 #ifdef __ANDROID__
 #include <jni.h>
 #endif
diff --git a/resource/csdk/connectivity/src/caqueueingthread.c b/resource/csdk/connectivity/src/caqueueingthread.c
index e034161..c916510 100644
--- a/resource/csdk/connectivity/src/caqueueingthread.c
+++ b/resource/csdk/connectivity/src/caqueueingthread.c
@@ -55,12 +55,16 @@ static void CAQueueingThreadBaseRoutine(void *threadValue)
         // if queue is empty, thread will wait
         if (!thread->isStop && u_queue_get_size(thread->dataQueue) <= 0)
         {
-            OIC_LOG(DEBUG, TAG, "wait..");
+            /* To avoid too many logs */
+            usleep(10);
+            /* OIC_LOG(DEBUG, TAG, "wait.."); */
 
             // wait
             ca_cond_wait(thread->threadCond, thread->threadMutex);
 
-            OIC_LOG(DEBUG, TAG, "wake up..");
+            /* To avoid too many logs */
+            usleep(10);
+            /* OIC_LOG(DEBUG, TAG, "wake up.."); */
         }
 
         // check stop flag
diff --git a/resource/csdk/connectivity/src/caretransmission.c b/resource/csdk/connectivity/src/caretransmission.c
index 7101b4c..63c0223 100644
--- a/resource/csdk/connectivity/src/caretransmission.c
+++ b/resource/csdk/connectivity/src/caretransmission.c
@@ -105,8 +105,13 @@ static const uint64_t MSECS_PER_SEC = 1000;
  */
 static uint64_t CAGetTimeoutValue()
 {
+#ifndef __TINYARA__
+    return ((DEFAULT_ACK_TIMEOUT_SEC * 1000) + ((1000 * (random() & 0xFF)) >> 8)) *
+            (uint64_t) 1000;
+#else
     return ((DEFAULT_ACK_TIMEOUT_SEC * 1000) + ((1000 * OCGetRandomByte()) >> 8)) *
             (uint64_t) 1000;
+#endif
 }
 
 CAResult_t CARetransmissionStart(CARetransmission_t *context)
@@ -276,18 +281,24 @@ void CARetransmissionBaseRoutine(void *threadValue)
         if (!context->isStop && u_arraylist_length(context->dataList) <= 0)
         {
             // if list is empty, thread will wait
-            OIC_LOG(DEBUG, TAG, "wait..there is no retransmission data.");
+            /* To avoid too many logs */
+            usleep(10);
+            /* OIC_LOG(DEBUG, TAG, "wait..there is no retransmission data."); */
 
             // wait
             ca_cond_wait(context->threadCond, context->threadMutex);
 
-            OIC_LOG(DEBUG, TAG, "wake up..");
+            /* To avoid too many logs */
+            usleep(10);
+            /* OIC_LOG(DEBUG, TAG, "wake up.."); */
         }
         else if (!context->isStop)
         {
             // check each RETRANSMISSION_CHECK_PERIOD_SEC time.
-            OIC_LOG_V(DEBUG, TAG, "wait..(%" PRIu64 ")microseconds",
+#if 0
+            OIC_LOG_V(DEBUG, TAG, "wait..(%lld)microseconds",
                       RETRANSMISSION_CHECK_PERIOD_SEC * (uint64_t) USECS_PER_SEC);
+#endif
 
             // wait
             uint64_t absTime = RETRANSMISSION_CHECK_PERIOD_SEC * (uint64_t) USECS_PER_SEC;
@@ -486,7 +497,7 @@ CAResult_t CARetransmissionReceivedData(CARetransmission_t *context,
                                         const CAEndpoint_t *endpoint, const void *pdu,
                                         uint32_t size, void **retransmissionPdu)
 {
-    OIC_LOG(DEBUG, TAG, "IN");
+    //OIC_LOG(DEBUG, TAG, "IN");
     if (NULL == context || NULL == endpoint || NULL == pdu || NULL == retransmissionPdu)
     {
         OIC_LOG(ERROR, TAG, "invalid parameter");
@@ -591,7 +602,7 @@ CAResult_t CARetransmissionReceivedData(CARetransmission_t *context,
     // mutex unlock
     ca_mutex_unlock(context->threadMutex);
 
-    OIC_LOG(DEBUG, TAG, "OUT");
+    //OIC_LOG(DEBUG, TAG, "OUT");
     return CA_STATUS_OK;
 }
 
diff --git a/resource/csdk/connectivity/src/ip_adapter/caipserver.c b/resource/csdk/connectivity/src/ip_adapter/caipserver.c
index 1cca9fe..488e59f 100644
--- a/resource/csdk/connectivity/src/ip_adapter/caipserver.c
+++ b/resource/csdk/connectivity/src/ip_adapter/caipserver.c
@@ -25,6 +25,7 @@
 #define _GNU_SOURCE // for in6_pktinfo
 #endif
 
+#include <tinyara/config.h>
 #include "iotivity_config.h"
 #include <sys/types.h>
 #if !defined(_WIN32)
@@ -57,6 +58,9 @@
 #include <linux/rtnetlink.h>
 #endif
 
+#ifdef __TINYARA__
+#include <uio.h>
+#endif
 #include "pdu.h"
 #include "caipinterface.h"
 #include "caadapterutils.h"
@@ -77,6 +81,11 @@
  */
 #define TAG "OIC_CA_IP_SERVER"
 
+#ifdef CONFIG_NET_LWIP
+#define SOCK_CLOEXEC 0
+#else
+#define SOCK_CLOEXEC 1
+#endif
 #define SELECT_TIMEOUT 1     // select() seconds (and termination latency)
 
 #define IPv4_MULTICAST     "224.0.1.187"
@@ -117,6 +126,19 @@ static char *ipv6mcnames[IPv6_DOMAINS] = {
     NULL
 };
 
+struct in6_pktinfo {
+        struct in6_addr ipi6_addr;
+        int             ipi6_ifindex;
+};
+#define RTMGRP_LINK 1
+#define IP_PKTINFO         8
+#define IPV6_PKTINFO            50
+#define IPV6_MULTICAST_IF 9
+#define IPV6_V6ONLY 27
+#define IPV6_RECVPKTINFO       50
+#define IPV6_JOIN_GROUP 12
+
+
 #if defined (_WIN32)
 #define IFF_UP_RUNNING_FLAGS  (IFF_UP)
 
@@ -217,6 +239,7 @@ static void CAFindReadyMessage()
 
     if (ret <= 0)
     {
+		usleep(10);
         if (ret < 0)
         {
             OIC_LOG_V(FATAL, TAG, "select error %s", CAIPS_GET_ERROR);
@@ -590,6 +613,7 @@ static CAResult_t CAReceiveMessage(CASocketFd_t fd, CATransportFlags_t flags)
 #endif // !defined(WSA_CMSG_DATA)
     CASecureEndpoint_t sep = {.endpoint = {.adapter = CA_ADAPTER_IP, .flags = flags}};
 
+#if 0
     if (flags & CA_IPV6)
     {
         /** @todo figure out correct usage for ifindex, and sin6_scope_id.*/
@@ -604,13 +628,16 @@ static CAResult_t CAReceiveMessage(CASocketFd_t fd, CATransportFlags_t flags)
         }
     }
     else
+#endif
     {
         if ((flags & CA_MULTICAST) && pktinfo)
         {
+#if 0
             struct in_addr *addr = &((struct in_pktinfo *)pktinfo)->ipi_addr;
             uint32_t host = ntohl(addr->s_addr);
             unsigned char topbits = ((unsigned char *)&host)[3];
             if (topbits < 224 || topbits > 239)
+#endif
             {
                 sep.endpoint.flags &= ~CA_MULTICAST;
             }
@@ -1003,6 +1030,7 @@ static void applyMulticastToInterface4(uint32_t ifindex)
         return;
     }
 
+#if 0
 #if defined(USE_IP_MREQN)
     struct ip_mreqn mreq = { .imr_multiaddr = IPv4MulticastAddress,
                              .imr_address.s_addr = htonl(INADDR_ANY),
@@ -1011,6 +1039,12 @@ static void applyMulticastToInterface4(uint32_t ifindex)
     struct ip_mreq mreq  = { .imr_multiaddr.s_addr = IPv4MulticastAddress.s_addr,
                              .imr_interface.s_addr = htonl(ifindex) };
 #endif
+#else
+	printf("\n [%s:%d] \n",__FUNCTION__,__LINE__);			
+	struct ip_mreq mreq;
+	memcpy(&mreq.imr_multiaddr,&IPv4MulticastAddress,sizeof(struct in_addr));
+	memcpy(&mreq.imr_interface,&inaddr,sizeof(struct in_addr));
+#endif
 
     int ret = setsockopt(caglobals.ip.m4.fd, IPPROTO_IP, IP_ADD_MEMBERSHIP, OPTVAL_T(&mreq), sizeof (mreq));
     if (OC_SOCKET_ERROR == ret)
@@ -1040,6 +1074,7 @@ static void applyMulticastToInterface4(uint32_t ifindex)
 
 static void applyMulticast6(int fd, struct in6_addr *addr, uint32_t ifindex)
 {
+#if 0
     struct ipv6_mreq mreq = {.ipv6mr_multiaddr = {0},
                              .ipv6mr_interface = ifindex };
 
@@ -1058,6 +1093,7 @@ static void applyMulticast6(int fd, struct in6_addr *addr, uint32_t ifindex)
             OIC_LOG_V(ERROR, TAG, "IPv6 IPV6_JOIN_GROUP failed: %s", CAIPS_GET_ERROR);
         }
     }
+#endif
 }
 
 static void applyMulticastToInterface6(uint32_t ifindex)
@@ -1337,6 +1373,7 @@ static void sendMulticastData4(const u_arraylist_t *iflist,
 {
     VERIFY_NON_NULL_VOID(endpoint, TAG, "endpoint is NULL");
 
+#if 0
 #if defined(USE_IP_MREQN)
     struct ip_mreqn mreq = { .imr_multiaddr = IPv4MulticastAddress,
                              .imr_address.s_addr = htonl(INADDR_ANY),
@@ -1345,6 +1382,10 @@ static void sendMulticastData4(const u_arraylist_t *iflist,
     struct ip_mreq mreq  = { .imr_multiaddr.s_addr = IPv4MulticastAddress.s_addr,
                              .imr_interface = {0}};
 #endif
+#else
+    struct ip_mreq mreq;
+    memcpy(&mreq.imr_multiaddr,&IPv4MulticastAddress,sizeof(struct in_addr));
+#endif
 
     OICStrcpy(endpoint->addr, sizeof(endpoint->addr), IPv4_MULTICAST);
     int fd = caglobals.ip.u4.fd;
diff --git a/resource/csdk/connectivity/src/ip_adapter/linux/caipnwmonitor.c b/resource/csdk/connectivity/src/ip_adapter/linux/caipnwmonitor.c
index 7d09727..1c1bdd7 100644
--- a/resource/csdk/connectivity/src/ip_adapter/linux/caipnwmonitor.c
+++ b/resource/csdk/connectivity/src/ip_adapter/linux/caipnwmonitor.c
@@ -352,10 +352,12 @@ u_arraylist_t *CAIPGetInterfaceInformation(int desiredIndex)
             goto exit;
         }
 
+#if 0
         OICStrcpy(ifitem->name, INTERFACE_NAME_MAX, ifa->ifa_name);
         ifitem->index = ifindex;
         ifitem->family = family;
         ifitem->flags = ifa->ifa_flags;
+#endif
 
         if (ifitem->family == AF_INET6)
         {
@@ -395,11 +397,15 @@ u_arraylist_t *CAIPGetInterfaceInformation(int desiredIndex)
             OIC_LOG_V(DEBUG, TAG, "Added interface: %s (%d)", ifitem->name, ifitem->family);
         }
     }
+#if 0
     freeifaddrs(ifp);
+#endif
     return iflist;
 
 exit:
+#if 0
     freeifaddrs(ifp);
+#endif
     u_arraylist_destroy(iflist);
     return NULL;
 }
diff --git a/resource/csdk/security/src/credresource.c b/resource/csdk/security/src/credresource.c
index 4dc8699..cd0408c 100644
--- a/resource/csdk/security/src/credresource.c
+++ b/resource/csdk/security/src/credresource.c
@@ -695,10 +695,18 @@ OCStackResult CBORPayloadToCred(const uint8_t *cborPayload, size_t size,
                             // credtype
                             if (strcmp(name, OIC_JSON_CREDTYPE_NAME)  == 0)
                             {
+#ifdef __TINYARA__
+                              /* uint64_t temp_credType=0;
+                                cborFindResult = cbor_value_get_uint64(&credMap, &temp_credType);
+                                cred->credType = temp_credType;*/
+                                cborFindResult = cbor_value_get_int(&credMap, (int *) &cred->credType);
+                                VERIFY_CBOR_SUCCESS(TAG, cborFindResult, "Failed Finding CredType.");
+#else
                                 uint64_t credType = 0;
                                 cborFindResult = cbor_value_get_uint64(&credMap, &credType);
                                 VERIFY_CBOR_SUCCESS(TAG, cborFindResult, "Failed Finding CredType.");
                                 cred->credType = (OicSecCredType_t)credType;
+#endif
                             }
                             // privatedata
                             if (strcmp(name, OIC_JSON_PRIVATEDATA_NAME)  == 0)
@@ -1308,7 +1316,30 @@ static OCEntityHandlerResult HandlePostRequest(const OCEntityHandlerRequest * eh
                 case SYMMETRIC_PAIR_WISE_KEY:
                 {
                     OCServerRequest *request = (OCServerRequest *)ehRequest->requestHandle;
+#ifdef __TINYARA__
+/*
+    OCTransportAdapter      adapter;
+    OCTransportFlags        flags;
+    uint16_t                port;
+    char                    addr[MAX_ADDR_STR_SIZE];
+    uint32_t                interface;
+#if defined (ROUTING_GATEWAY) || defined (ROUTING_EP)
+    char                    routeData[MAX_ADDR_STR_SIZE]; //destination GatewayID:ClientId
+#endif
+*/
+		CAEndpoint_t *ep_addr = (CAEndpoint_t *)malloc(sizeof(CAEndpoint_t));
+		ep_addr->adapter=   request->devAddr.adapter;
+		ep_addr->flags=   request->devAddr.flags;
+		ep_addr->port  =   request->devAddr.port;
+		memcpy(ep_addr->addr,request->devAddr.addr,MAX_ADDR_STR_SIZE_CA);
+		ep_addr->interface  =   request->devAddr.interface;
+#if defined (ROUTING_GATEWAY) || defined (ROUTING_EP)
+		memcpy(ep_addr->routeData,request->devAddr.routeData,MAX_ADDR_STR_SIZE_CA);
+#endif
+	           if(FillPrivateDataOfOwnerPSK(cred, ep_addr, doxm))
+#else
                     if(FillPrivateDataOfOwnerPSK(cred, (CAEndpoint_t *)&request->devAddr, doxm))
+#endif
                     {
                         if(OC_STACK_RESOURCE_DELETED == RemoveCredential(&cred->subject))
                         {
@@ -2062,7 +2093,7 @@ void GetDerKey(ByteArray * key)
             OIC_LOG_V(DEBUG, TAG, "Key Found!! %d", key->len);
         }
     }
-    if(0 == key->len) 
+    if(0 == key->len)
     {
         OIC_LOG(DEBUG, TAG, "Key Not Found!!");
     }
diff --git a/tinyara.scons b/tinyara.scons
new file mode 100644
index 0000000..7647bcc
--- /dev/null
+++ b/tinyara.scons
@@ -0,0 +1,2 @@
+Import('env')
+env.AppendUnique(CPPDEFINES = ['__TINYARA__'])
-- 
1.9.1

